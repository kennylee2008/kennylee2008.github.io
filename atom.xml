<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Future Labs</title>
  
  <subtitle>A Playground for Fullstack Technologies</subtitle>
  <link href="https://www.futlabs.com/atom.xml" rel="self"/>
  
  <link href="https://www.futlabs.com/"/>
  <updated>2021-08-13T12:47:18.582Z</updated>
  <id>https://www.futlabs.com/</id>
  
  <author>
    <name>Kenny Lee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to find the menu items in WordPress</title>
    <link href="https://www.futlabs.com/2021/08/14/How-to-find-the-menu-items-in-WordPress/"/>
    <id>https://www.futlabs.com/2021/08/14/How-to-find-the-menu-items-in-WordPress/</id>
    <published>2021-08-13T12:10:57.000Z</published>
    <updated>2021-08-13T12:47:18.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>This article introduces how to get the menu object and menu path corresponding to the current page, how to get the menu object’s sub menus, how to get the menu object’s parent object, etc. in WordPress. Even if you don’t need to define your own menu presentation, you can get inspiration from the implementation of these functions to be able to do more flexible customization in other places.</p><span id="more"></span><h2 id="Why-you-need-these-helper-function"><a href="#Why-you-need-these-helper-function" class="headerlink" title="Why you need these helper function"></a>Why you need these helper function</h2><p>If you want to be able to use the menu in WordPress more flexibly, you may want to decide all the layout code of the menu by yourself.</p><h2 id="The-Helper-function-code"><a href="#The-Helper-function-code" class="headerlink" title="The Helper function code"></a>The Helper function code</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Find sub menu items of a parent menu item.</span></span><br><span class="line"><span class="comment"> * if $menu_item_parent parameter is 0, return all top menu items</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findMenuItems</span>(<span class="params"><span class="variable">$location</span>, <span class="variable">$menu_item_parent</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$items</span> = get_nav_menu_items_by_location(<span class="variable">$location</span>);</span><br><span class="line">    <span class="variable">$rtn</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$items</span> <span class="keyword">as</span> <span class="variable">$item</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$item</span>-&gt;menu_item_parent == <span class="variable">$menu_item_parent</span>) &#123;</span><br><span class="line">            <span class="variable">$rtn</span>[] = <span class="variable">$item</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$rtn</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Find sub menus of a parent menu item</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findMenuItemsByParentID</span>(<span class="params"><span class="variable">$menu_item_parent</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$locations</span> = get_nav_menu_locations();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$locations</span> <span class="keyword">as</span> <span class="variable">$location</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">        <span class="variable">$rtn</span> = findMenuItems(<span class="variable">$location</span>, <span class="variable">$menu_item_parent</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$rtn</span>) &amp;&amp; count(<span class="variable">$rtn</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$rtn</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the parent menu item by the specific menu item</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findParentMenuItem</span>(<span class="params"><span class="variable">$menuItem</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$menuItem</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$pid</span> = <span class="variable">$menuItem</span>-&gt;menu_item_parent;</span><br><span class="line">    <span class="variable">$parent</span> = findMenuItemById(<span class="variable">$pid</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$parent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * You can define a menu tree in your backend of WordPress.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * When you visit a page, according the URI of the page, find</span></span><br><span class="line"><span class="comment"> * the matching menu item and all its ancestor menu items.</span></span><br><span class="line"><span class="comment"> * [0]: The top menu item</span></span><br><span class="line"><span class="comment"> * [1]: The menu item in level 1 of the menu tree</span></span><br><span class="line"><span class="comment"> * [2]: The menu item in level 2 of the menu tree</span></span><br><span class="line"><span class="comment"> * ...</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * for example, if you have a menu tree :</span></span><br><span class="line"><span class="comment"> * A</span></span><br><span class="line"><span class="comment"> *   A1</span></span><br><span class="line"><span class="comment"> *   A2</span></span><br><span class="line"><span class="comment"> *     A21</span></span><br><span class="line"><span class="comment"> *     A22</span></span><br><span class="line"><span class="comment"> * B</span></span><br><span class="line"><span class="comment"> *   B1</span></span><br><span class="line"><span class="comment"> *      B11</span></span><br><span class="line"><span class="comment"> *   B2</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * And the current URI is matching the &quot;B11&quot; menu,you will get:</span></span><br><span class="line"><span class="comment"> * [0] = B</span></span><br><span class="line"><span class="comment"> * [1] = B1</span></span><br><span class="line"><span class="comment"> * [2] = B11</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * So, You can set the B, B1, B11 to selected state on your website!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCurrentMenuStack</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$rtn</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="variable">$subMenu</span> = findCurrentMenuItem();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$subMenu</span>)) &#123;</span><br><span class="line">        <span class="variable">$rtn</span>[] = <span class="variable">$subMenu</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="keyword">empty</span>(<span class="variable">$subMenu</span>-&gt;menu_item_parent)) &#123;</span><br><span class="line">        <span class="variable">$subMenu</span> = findParentMenuItem(<span class="variable">$subMenu</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$subMenu</span>)) &#123;</span><br><span class="line">            <span class="variable">$rtn</span>[] = <span class="variable">$subMenu</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> array_reverse(<span class="variable">$rtn</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get current Menu Item Object</span></span><br><span class="line"><span class="comment"> * If current request URI is matching a menu item,return the menu item.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findCurrentMenuItem</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$uri</span> = <span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_URI&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (home_url(<span class="string">&quot;/&quot;</span>) == get_permalink()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> findMenuItem(<span class="variable">$uri</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * You should not call this function directly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findMenuItemById</span>(<span class="params"><span class="variable">$menu_object_id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$menu_object_id</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$locations</span> = get_nav_menu_locations();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$locations</span> <span class="keyword">as</span> <span class="variable">$location</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">        <span class="variable">$parents</span> = findMenuItems(<span class="variable">$location</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$parents</span> <span class="keyword">as</span> <span class="variable">$parent</span>) &#123;</span><br><span class="line">            <span class="variable">$rtn</span> = hasEqualsMenuItem(<span class="variable">$location</span>, <span class="variable">$parent</span>, <span class="variable">$menu_object_id</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$rtn</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$rtn</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&quot;Not found any MenuItem with menu ID [<span class="subst">$menu_object_id</span>]&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * You should not call this function directly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasEqualsMenuItem</span>(<span class="params"><span class="variable">$location</span>, <span class="variable">$menuItem</span>, <span class="variable">$menu_object_id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$menuItem</span>-&gt;object_id == <span class="variable">$menu_object_id</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$menuItem</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$children</span> = findMenuItems(<span class="variable">$location</span>, <span class="variable">$menuItem</span>-&gt;object_id);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$children</span> <span class="keyword">as</span> <span class="variable">$child</span>) &#123;</span><br><span class="line">        <span class="variable">$rtn</span> = hasEqualsMenuItem(<span class="variable">$location</span>, <span class="variable">$child</span>, <span class="variable">$menu_object_id</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$rtn</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$rtn</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * You should not call this function directly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findMenuItem</span>(<span class="params"><span class="variable">$uri</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$locations</span> = get_nav_menu_locations();</span><br><span class="line">    <span class="variable">$menuItemStack</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$locations</span> <span class="keyword">as</span> <span class="variable">$location</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">        <span class="variable">$parents</span> = findMenuItems(<span class="variable">$location</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$parents</span> <span class="keyword">as</span> <span class="variable">$parent</span>) &#123;</span><br><span class="line">            privateFindMenuStack(<span class="variable">$location</span>, <span class="variable">$parent</span>, <span class="variable">$uri</span>, <span class="variable">$menuItemStack</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (count(<span class="variable">$menuItemStack</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> end(<span class="variable">$menuItemStack</span>)[<span class="string">&quot;menu_item&quot;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * You should not call this function directly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">privateFindMenuStack</span>(<span class="params"><span class="variable">$location</span>, <span class="variable">$menuItem</span>, <span class="variable">$uri</span>, &amp;<span class="variable">$menuItemStack</span>, <span class="variable">$level</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$menuItemUrl</span> = <span class="variable">$menuItem</span>-&gt;url;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        substr(<span class="variable">$uri</span>, <span class="number">0</span>, strlen(<span class="variable">$menuItemUrl</span>)) === <span class="variable">$menuItemUrl</span></span><br><span class="line">        || substr(<span class="variable">$menuItemUrl</span>, <span class="number">0</span>, strlen(<span class="variable">$uri</span>)) === <span class="variable">$uri</span></span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="variable">$menuItemStack</span>[] = <span class="keyword">array</span>(<span class="string">&quot;menu_item&quot;</span> =&gt; <span class="variable">$menuItem</span>, <span class="string">&quot;level&quot;</span> =&gt; <span class="variable">$level</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$children</span> = findMenuItems(<span class="variable">$location</span>, <span class="variable">$menuItem</span>-&gt;object_id);</span><br><span class="line">    <span class="keyword">if</span> (count(<span class="variable">$children</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$children</span> <span class="keyword">as</span> <span class="variable">$child</span>) &#123;</span><br><span class="line">            privateFindMenuStack(<span class="variable">$location</span>, <span class="variable">$child</span>, <span class="variable">$uri</span>, <span class="variable">$menuItemStack</span>, <span class="variable">$level</span> + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * You should not call this function directly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_nav_menu_items_by_location</span>(<span class="params"><span class="variable">$location</span>, <span class="variable">$args</span> = []</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get all locations</span></span><br><span class="line">    <span class="variable">$locations</span> = get_nav_menu_locations();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get object id by location</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$locations</span>[<span class="variable">$location</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$object</span> = wp_get_nav_menu_object(<span class="variable">$locations</span>[<span class="variable">$location</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$object</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get menu items by menu name</span></span><br><span class="line">    <span class="variable">$menu_items</span> = wp_get_nav_menu_items(<span class="variable">$object</span>-&gt;name, <span class="variable">$args</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Return menu post objects</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$menu_items</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$currentMenuStack</span> = getCurrentMenuStack();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Display the current crumb navigation</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$currentMenuStack</span> <span class="keyword">as</span> <span class="variable">$menuItem</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&amp;gt;&quot;</span> . <span class="variable">$menuItem</span>-&gt;title;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Display the top menus</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$topPrimaryMenus</span> = findMenuItems(<span class="string">&quot;primary&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;ul&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$topPrimaryMenus</span> <span class="keyword">as</span> <span class="variable">$topMenuItem</span>) &#123;</span><br><span class="line">    <span class="variable">$selected</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$topMenuItem</span>-&gt;object_id == <span class="variable">$currentMenuStack</span>[<span class="number">0</span>]-&gt;object_id) &#123;</span><br><span class="line">        <span class="variable">$selected</span> = <span class="string">&quot;selected&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;li class=\&quot;&quot;</span> . <span class="variable">$selected</span> . <span class="string">&quot;\&quot;&gt; &lt;a href=\&quot;&quot;</span> . <span class="variable">$topMenuItem</span>-&gt;url . <span class="string">&quot;\&quot;&gt;&quot;</span> . <span class="variable">$topMenuItem</span>-&gt;title . <span class="string">&quot;&lt;/a&gt;&lt;/li&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/ul&gt;&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Enjoy it!</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;This article introduces how to get the menu object and menu path corresponding to the current page, how to get the menu object’s sub menus, how to get the menu object’s parent object, etc. in WordPress. Even if you don’t need to define your own menu presentation, you can get inspiration from the implementation of these functions to be able to do more flexible customization in other places.&lt;/p&gt;</summary>
    
    
    
    
    <category term="WordPress" scheme="https://www.futlabs.com/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>How to Integrate Github and Jenkins - Part II</title>
    <link href="https://www.futlabs.com/2021/08/12/How-to-Integrate-Github-and-Jenkins-Part-II/"/>
    <id>https://www.futlabs.com/2021/08/12/How-to-Integrate-Github-and-Jenkins-Part-II/</id>
    <published>2021-08-11T12:53:45.000Z</published>
    <updated>2021-08-13T13:02:50.613Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>This article is the second part of a series on integrating Jenkins and Github. It focuses on how to use the <em>git diff</em> command in Jenkinsfile to get the differences between the Repository’s current Commit and the last Commit, and use the <strong>SSH Agent</strong> to connect to a remote host to execute commands and upload files via <em>scp</em>.</p><span id="more"></span><h2 id="How-to-get-the-difference-between-two-commits"><a href="#How-to-get-the-difference-between-two-commits" class="headerlink" title="How to get the difference between two commits?"></a>How to get the difference between two commits?</h2><p>The <em>git diff</em> command can be used to get the difference between two commits. For example.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% git diff --name-only --diff-filter=D &lt;COMMIT_ID_1&gt; &lt;COMMIT_ID_2&gt;</span><br></pre></td></tr></table></figure><p>We need to know which files were deleted and which files were updated or added between commits. <em>git diff</em> has a very rich set of parameters to use, so here are just a few of the ones we might want to use.</p><p><strong>–name-only</strong>, this parameter is used to output the name of file only.Because we need to know the filename and the path,so we will use this parameter later.</p><p><strong>–diff-filter</strong>, this parameter is used to query for the files we need. For example, <em>–diff-filter=D</em>, meaning deleted files. <em>–diff-filter=A</em> means the file that was added. And if lowercase letters are used, it means exclude. For example <em>–diff-filter=d</em>, means all files except those deleted files.</p><p>We can start by running <em>git log</em> to get a list of the commit history:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">% git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">commit 882866463421d32f9920f7675fa1c3e51caaa1ba (HEAD -&gt; main, origin/main)</span><br><span class="line">Author: kennylee2008 &lt;**@gmail.com&gt;</span><br><span class="line">Date:   Wed Aug 11 16:33:24 2021 +1200</span><br><span class="line"></span><br><span class="line">    modify the color of the menus</span><br><span class="line"></span><br><span class="line">commit 381d6a602ef1ae5181a72785a91495ebec347e61</span><br><span class="line">Merge: 4c87bb0 13ec5c1</span><br><span class="line">Author: kennylee2008 &lt;**@gmail.com&gt;</span><br><span class="line">Date:   Wed Aug 11 16:32:04 2021 +1200</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>What files were removed from the latest commit compared to the previous commit?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% git diff --name-only --diff-filter=D 381d6a602ef1ae5181a72785a91495ebec347e61 882866463421d32f9920f7675fa1c3e51caaa1ba</span><br></pre></td></tr></table></figure><p>What files have been added or updated in the latest commit compared to the previous commit?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% git diff --name-only --diff-filter=d 381d6a602ef1ae5181a72785a91495ebec347e61 882866463421d32f9920f7675fa1c3e51caaa1ba</span><br></pre></td></tr></table></figure><h2 id="How-to-call-Git-commands-in-Jenkinsfile"><a href="#How-to-call-Git-commands-in-Jenkinsfile" class="headerlink" title="How to call Git commands in Jenkinsfile"></a>How to call Git commands in Jenkinsfile</h2><p>You can use <strong>Shell Script</strong> to invoke the <em>git diff</em> command and assign the output to the appropriate variables.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">script&#123;</span><br><span class="line">    <span class="comment">//All modified and added files (none-deleted files)</span></span><br><span class="line">    COMMIT_CHANGES = sh (</span><br><span class="line">        returnStdout: <span class="keyword">true</span>,</span><br><span class="line">        script: <span class="string">&quot;git diff --name-only --diff-filter=d $GIT_PREVIOUS_COMMIT $GIT_COMMIT&quot;</span></span><br><span class="line">    ).trim()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//All deleted files</span></span><br><span class="line">    COMMIT_DELETEDS = sh (</span><br><span class="line">        returnStdout: <span class="keyword">true</span>,</span><br><span class="line">        script: <span class="string">&quot;git diff --name-only --diff-filter=D $GIT_PREVIOUS_COMMIT $GIT_COMMIT&quot;</span></span><br><span class="line">    ).trim()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The COMMIT_CHANGES and COMMIT_DELETEDS, obtained in the above example, are both of type String. The $GIT_PREVIOUS_COMMIT/$GIT_COMMIT in the example are the two variables output by the Git plugin.</p><p>Since Jenkinsfile can be written using Groovy syntax, which is very similar to Java, programmers familiar with Java can easily master writing Jenkinsfile. For example, the following file is printed out to be deleted.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Converting strings to arrays</span></span><br><span class="line">COMMIT_DELETED_SET = COMMIT_DELETEDS.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//print out the files to be deleted one by one</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;COMMIT_DELETED_SET.size(); i++)&#123;</span><br><span class="line">println(COMMIT_DELETED_SET[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Configure-SSH-Credential"><a href="#Configure-SSH-Credential" class="headerlink" title="Configure SSH Credential"></a>Configure SSH Credential</h2><p>You’ve got the list of difference files. Next, you’ll need to connect to the remote host. To do this, we need to configure SSH in Jenkins first.</p><p>Generate a public-private key pair:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% ssh-keygen -t rsa -b 4096 -f <span class="string">&quot;mysshkey&quot;</span></span><br></pre></td></tr></table></figure><p>Upload the public key to the target remote deployment host:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">% ssh-copy-id -i mysshkey example@x.x.x.x</span><br></pre></td></tr></table></figure><p>Configure SSH Credential in Jenkins:</p><p><img src="/2021/08/12/How-to-Integrate-Github-and-Jenkins-Part-II/2021-08-12T012517.png"><br><img src="/2021/08/12/How-to-Integrate-Github-and-Jenkins-Part-II/2021-08-12T012943.png"><br>The ID and Description are whatever you want, username is the login name of the remote host, and private key is the file you just generated. Passphrase is the password you entered when you used ssh-keygen to generate the public-private key pair (if you didn’t set a password just now, just leave it blank).</p><h2 id="Execute-commands-on-the-remote-host"><a href="#Execute-commands-on-the-remote-host" class="headerlink" title="Execute commands on the remote host"></a>Execute commands on the remote host</h2><p>You need to make sure that the <strong>SSH Agent</strong> Plugin is installed.</p><p>Example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sshagent(credentials: [<span class="string">&#x27;SSH_Credential_ID_You_Just_Created&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">sh <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">ssh example@x.x.x.x &lt;&lt;EOF</span></span><br><span class="line"><span class="string">cd /var/www/mywebsite</span></span><br><span class="line"><span class="string">rm need/to/be/deleted/file</span></span><br><span class="line"><span class="string">exit</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Transferring-files-to-a-remote-host"><a href="#Transferring-files-to-a-remote-host" class="headerlink" title="Transferring files to a remote host"></a>Transferring files to a remote host</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sshagent(credentials: [<span class="string">&#x27;SSH_Credential_ID_You_Just_Created&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line">sh <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">scp local/file example@x.x.x.x:/remote/file/path</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="A-simple-Jenkinsfile-sample"><a href="#A-simple-Jenkinsfile-sample" class="headerlink" title="A simple Jenkinsfile sample"></a>A simple Jenkinsfile sample</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line"></span><br><span class="line">    stages &#123;</span><br><span class="line">        stage(<span class="string">&#x27;Deploy&#x27;</span>) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">                script&#123;</span><br><span class="line">                    <span class="comment">//All modified and added files (none-deleted files)</span></span><br><span class="line">                    COMMIT_CHANGES = sh (</span><br><span class="line">                        returnStdout: <span class="keyword">true</span>,</span><br><span class="line">                        script: <span class="string">&quot;git diff --name-only --diff-filter=d $GIT_PREVIOUS_COMMIT $GIT_COMMIT&quot;</span></span><br><span class="line">                    ).trim()</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//All deleted files</span></span><br><span class="line">                    COMMIT_DELETEDS = sh (</span><br><span class="line">                        returnStdout: <span class="keyword">true</span>,</span><br><span class="line">                        script: <span class="string">&quot;git diff --name-only --diff-filter=D $GIT_PREVIOUS_COMMIT $GIT_COMMIT&quot;</span></span><br><span class="line">                    ).trim()</span><br><span class="line">                &#125;</span><br><span class="line">                sh <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">                    [ -d ~/.ssh ] || mkdir ~/.ssh &amp;&amp; chmod 0700 ~/.ssh</span></span><br><span class="line"><span class="string">                    ssh-keyscan -t rsa,dsa x.x.x.x &gt;&gt; ~/.ssh/known_hosts</span></span><br><span class="line"><span class="string">                &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">                script&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//Get the changed files set</span></span><br><span class="line">                    COMMIT_CHANGE_SET = COMMIT_CHANGES.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    COMMIT_DELETED_SET = COMMIT_DELETEDS.split(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    sshagent(credentials: [<span class="string">&#x27;SSH_With_PrivateKey_to_Deploy_Machine&#x27;</span>]) &#123;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;COMMIT_CHANGE_SET.size(); i++)&#123;</span><br><span class="line">                            <span class="keyword">if</span>(!COMMIT_CHANGE_SET[i].startsWith(<span class="string">&quot;directory/need/to/be/deploy&quot;</span>)</span><br><span class="line">                                &amp;&amp; !COMMIT_CHANGE_SET[i].startsWith(<span class="string">&quot;another/directory/need/to/be/deploy&quot;</span>)</span><br><span class="line">                            )&#123;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            COMMIT_CHANGE_DIR = COMMIT_CHANGE_SET[i].substring(<span class="number">0</span>, COMMIT_CHANGE_SET[i].lastIndexOf(<span class="string">&quot;/&quot;</span>));</span><br><span class="line"></span><br><span class="line">                            <span class="comment">//force create the directory and upload the file</span></span><br><span class="line">                            sh <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">                                ssh example@x.x.x.x &#x27;mkdir -p /var/www/websites/example/$COMMIT_CHANGE_DIR&#x27;</span></span><br><span class="line"><span class="string">                                scp $&#123;COMMIT_CHANGE_SET[i]&#125; example@x.x.x.x:/var/www/websites/example/$COMMIT_CHANGE_DIR</span></span><br><span class="line"><span class="string">                            &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;COMMIT_DELETED_SET.size(); i++)&#123;</span><br><span class="line">                            <span class="keyword">if</span>(!COMMIT_DELETED_SET[i].startsWith(<span class="string">&quot;directory/need/to/be/deploy&quot;</span>)</span><br><span class="line">                                &amp;&amp; !COMMIT_DELETED_SET[i].startsWith(<span class="string">&quot;another/directory/need/to/be/deploy&quot;</span>)</span><br><span class="line">                            )&#123;</span><br><span class="line">                                <span class="keyword">continue</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="comment">//delete the file</span></span><br><span class="line">                            sh <span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">                                ssh example@x.x.x.x &lt;&lt;EOF</span></span><br><span class="line"><span class="string">                                cd /var/www/websites/example</span></span><br><span class="line"><span class="string">                                rm $&#123;COMMIT_DELETED_SET[i]&#125;</span></span><br><span class="line"><span class="string">                                exit</span></span><br><span class="line"><span class="string">                                EOF</span></span><br><span class="line"><span class="string">                            &quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;This article is the second part of a series on integrating Jenkins and Github. It focuses on how to use the &lt;em&gt;git diff&lt;/em&gt; command in Jenkinsfile to get the differences between the Repository’s current Commit and the last Commit, and use the &lt;strong&gt;SSH Agent&lt;/strong&gt; to connect to a remote host to execute commands and upload files via &lt;em&gt;scp&lt;/em&gt;.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Github" scheme="https://www.futlabs.com/tags/Github/"/>
    
    <category term="Jenkins" scheme="https://www.futlabs.com/tags/Jenkins/"/>
    
    <category term="CICD" scheme="https://www.futlabs.com/tags/CICD/"/>
    
    <category term="DevOps" scheme="https://www.futlabs.com/tags/DevOps/"/>
    
    <category term="SSH" scheme="https://www.futlabs.com/tags/SSH/"/>
    
    <category term="Git" scheme="https://www.futlabs.com/tags/Git/"/>
    
    <category term="pipeline" scheme="https://www.futlabs.com/tags/pipeline/"/>
    
    <category term="Jenkinsfile" scheme="https://www.futlabs.com/tags/Jenkinsfile/"/>
    
  </entry>
  
  <entry>
    <title>How to Integrate Github and Jenkins - Part I</title>
    <link href="https://www.futlabs.com/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/"/>
    <id>https://www.futlabs.com/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/</id>
    <published>2021-08-09T11:37:12.000Z</published>
    <updated>2021-08-13T13:02:35.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>This series is divided into two parts to introduce how to integrate Github and Jenkins in practice.</p><p>The first part focuses on how to trigger the Jenkins pipeline to run when you push to the Github.</p><span id="more"></span><p>The second part focuses on how to write Jenkins pipeline to get the difference between two commits so that you can perform different operations , such as deleting files in the deployment environment for deleted files, and modified and added files are uploaded to the deployment environment via scp.</p><p>This article is the first part of a series on how to use Github’s Webhooks to automatically trigger Jenkins to execute a certain Pipeline you define when you push a project to Github.</p><p>This article assumes that you are familiar with Git and the basic operations on Github, including how to create a repository and how to push your local repository to Github; you should also have Jenkins installed and accessible via a public IP address or domain name.</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T005223.png"></p><h2 id="Step-1-Find-the-callback-URL-address-provided-by-Jenkins"><a href="#Step-1-Find-the-callback-URL-address-provided-by-Jenkins" class="headerlink" title="Step 1: Find the callback URL address provided by Jenkins."></a>Step 1: Find the callback URL address provided by Jenkins.</h2><p>If you want Github to notify your Pipeline defined in Jenkins, you need a URL that you can later configure into Github. Assuming your Jenkins can be accessed via this URL: <a href="https://jenkins.example.com/">https://jenkins.example.com</a>, basically the callback URL address is <a href="https://jenkins.example.com/github-webhook/">https://jenkins.example.com/github-webhook/</a>. You can find this URL by these following steps.</p><ol><li>Log in to your Jenkins</li><li>Go to <em>Manage Jenkins</em></li><li>click <em>Configure System</em></li><li>scroll down, find the <em>Github</em> configuration, and click the <em>Advanced…</em> button</li></ol><p><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T010111.png"></p><ol start="5"><li>select the <em>Specify another hook URL for GitHub configuration</em></li></ol><p><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T010427.png"></p><p>The one shown above is the URL callback address you need. Note that the purpose of checking that checkbox is only to find your URL address, so remember to <strong>uncheck that checkbox</strong> at the end and <strong>don’t need to save the configuration</strong>.</p><h2 id="Step-2-Create-an-Organization-on-Github"><a href="#Step-2-Create-an-Organization-on-Github" class="headerlink" title="Step 2: Create an Organization on Github"></a>Step 2: Create an Organization on Github</h2><p>Since Github does not support individual accounts to set up webhooks, you need to create an Organization. Please refer to: <a href="https://docs.github.com/en/organizations/collaborating-with-groups-in-organizations/creating-a-new-organization-from-scratch">https://docs.github.com/en/organizations/collaborating-with-groups-in-organizations/creating-a-new-organization-from-scratch</a> article to create an Organization.</p><h2 id="Step-3-Create-a-Repository-under-your-Github-Organization"><a href="#Step-3-Create-a-Repository-under-your-Github-Organization" class="headerlink" title="Step 3: Create a Repository under your Github Organization."></a>Step 3: Create a Repository under your Github Organization.</h2><p>It’s exactly the same as how to create a Repository under your personal account, but now you go inside the Organization to create it instead. I won’t go into detail about this step.</p><p>In general, it’s more flexible and convenient to use a Jenkinsfile to define a Pipeline. So, add a file named <em>Jenkinsfile</em> under your Repository root(I won’t go into the details of how to define a Pipeline in this article), and later, I’ll create a Multibranch Pipeline in Jenkins that will use this <em>Jenkinsfile</em> file.</p><p>An example of Jenkinsfile:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">agent any</span><br><span class="line">stages &#123;</span><br><span class="line">stage(<span class="string">&#x27;Build&#x27;</span>) &#123;</span><br><span class="line">steps &#123;</span><br><span class="line">echo Hello World</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Step-4-Configuring-Webhooks-in-your-Repository"><a href="#Step-4-Configuring-Webhooks-in-your-Repository" class="headerlink" title="Step 4: Configuring Webhooks in your Repository"></a>Step 4: Configuring Webhooks in your Repository</h2><p>Click on settings in your Repository:<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T011429.png"></p><p>Click Webhooks:<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T011456.png"></p><p>Click Add Webhook:<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T011556.png"></p><p>Fill the callback URL as the Payload URL, you can also choose the appropriate Events to Trigger the webhook.</p><p>Finally click the <em>Add webhook</em> button to save it.</p><h2 id="Step-5-Create-a-Personal-Access-Token-on-Github"><a href="#Step-5-Create-a-Personal-Access-Token-on-Github" class="headerlink" title="Step 5: Create a Personal Access Token on Github"></a>Step 5: Create a Personal Access Token on Github</h2><p>This is a preparation for being able to access Github later in Jenkins.</p><p>Click your account’s Settings(<strong>Not the repository’s Settings</strong>):<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012055.png"></p><p>Find the <em>Developer Setting</em> menu on the left:<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012155.png"></p><p>Once you are on the page, find <em>Personal access tokens</em>, create a Personal access tokens as required and copy and save it in time, we will use it later.<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012301.png"></p><h2 id="Step-6-Create-a-Credential-in-Jenkins"><a href="#Step-6-Create-a-Credential-in-Jenkins" class="headerlink" title="Step 6: Create a Credential in Jenkins"></a>Step 6: Create a Credential in Jenkins</h2><p>In order to enable Jenkins to access Github and download the Repository later, we need to configure a Credential first.</p><p>Go to: <em>Manage Jenkins</em> -&gt; <em>Manage Credential</em></p><p>Click on <em>Jenkins</em> (below)<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012445.png"></p><p>Click <em>Global Credentials</em><br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012521.png"></p><p>In the left menu click <em>Add Credentials</em><br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012559.png"></p><p>Select <em>Username with password</em> Type<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012644.png"></p><p>In the form above, fill in <em>Username</em> with the login email you used for your Github account, <em>Password</em> with the <strong>Personal access token you got in step 5</strong>, and ID with the name you want. Just click the OK button.</p><h2 id="Step-7-Create-a-Multibranch-Pipeline-in-Jenkins"><a href="#Step-7-Create-a-Multibranch-Pipeline-in-Jenkins" class="headerlink" title="Step 7: Create a Multibranch Pipeline in Jenkins"></a>Step 7: Create a Multibranch Pipeline in Jenkins</h2><p>Select <em>New Item</em> on the left menu, enter a name for the Item, and select the <em>Multibranch Pipeline</em> type. This is a recommended type to maintain Jenkinsfile files in your own repository, making it easy to use different Jenkinsfile files in different branches in order to reach the point where you only need to create one Pipeline to support CI/CD processes for multiple environments at the same time. For example: Dev/Test/Prod/Hotfix, etc.<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T012945.png"></p><p>Select <em>Github</em> in <em>Branch Source</em><br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T013041.png"></p><p>Select the Credential you just created and fill in the address of your project on Github<br><img src="/2021/08/09/How-to-Integrate-Github-and-Jenkins-Part-I/2021-08-10T013131.png"></p><p>After filling out the form, you can save it.</p><h2 id="Step-8-That’s-all-Now-you-can-test-it"><a href="#Step-8-That’s-all-Now-you-can-test-it" class="headerlink" title="Step 8: That’s all, Now you can test it"></a>Step 8: That’s all, Now you can test it</h2><p>You can modify the Repository on your Github and then push it to Github, refresh Jenkins later and you will see the results of Jenkins execution.</p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><ol><li>personal projects do not support the configuration of webhook, at least need to create an Organization.</li><li>if you are familiar with Jenkins, you can also configure other types of Pipeline, such as Freestyle Project and so on.</li><li>At present, Multibranch Pipeline needs to use https to access github by default, so you need to configure Personal access token on github.</li><li>You can also configure SSH type Credential with public-private key pair to access Github.</li></ol>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;p&gt;This series is divided into two parts to introduce how to integrate Github and Jenkins in practice.&lt;/p&gt;
&lt;p&gt;The first part focuses on how to trigger the Jenkins pipeline to run when you push to the Github.&lt;/p&gt;</summary>
    
    
    
    
    <category term="Github" scheme="https://www.futlabs.com/tags/Github/"/>
    
    <category term="Jenkins" scheme="https://www.futlabs.com/tags/Jenkins/"/>
    
    <category term="CICD" scheme="https://www.futlabs.com/tags/CICD/"/>
    
    <category term="DevOps" scheme="https://www.futlabs.com/tags/DevOps/"/>
    
  </entry>
  
</feed>
